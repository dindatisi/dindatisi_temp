{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"names":["ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","Text","props","console","warn","MDXContent","components","mdxType","fontSize","isMDXComponent","Title","makeShortcode","text","Homepage","posts","blogPath","p","mt","showTags","HomepageComponent","allPost","data","nodes","query","BlogListItem","post","color","title","date","Listing","className"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-f164082c6b9d025baeaa.js","sourcesContent":["import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6]\n    }} mdxType=\"Text\">\n      <p><b>{`Hi there`}</b>\n        {`.`}</p>\n      <p>{`I'm Dinda (`}\n        <em {...{\n          \"parentName\": \"p\"\n        }}><a {...{\n            \"href\": \"mailto:dinda@hey.com\",\n            \"parentName\": \"em\"\n          }}>{`dinda@hey.com`}</a></em>\n        {`) - I work with Data, Python, SQL, and PowerPoint. Here I casually write about my thoughts & learnings. I try to keep it short (a couple of mins reading time). Hope you enjoy my writings.`}</p>\n    </Text>\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Projects\" mdxType=\"Title\" />\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><a {...{\n          \"href\": \"https://drive.google.com/file/d/1TVmie1t_5M47YLneJtDOgb81AcnycoHD/view?usp=sharing\",\n          \"parentName\": \"li\"\n        }}>{`My Porftolio`}</a></li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><a {...{\n          \"href\": \"https://github.com/dindatisi/analytics_reading_list\",\n          \"parentName\": \"li\"\n        }}>{`My Analytics Reading List on Github`}</a></li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><a {...{\n          \"href\": \"https://dindatc.wordpress.com/2019/08/25/visa-kerja-jerman-blue-card/\",\n          \"parentName\": \"li\"\n        }}>{`Mendapatkan EU Blue Card`}</a></li>\n\n    </ul>\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 } }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default function MinimalBlogCoreHomepage({ data }: Props) {\n  const { allPost } = data\n\n  return <Homepage posts={allPost.nodes} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <TLink as={Link} to={post.slug} sx={{ fontSize: [1, 2, 3], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"sourceRoot":""}